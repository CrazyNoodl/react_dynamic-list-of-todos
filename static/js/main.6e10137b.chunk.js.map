{"version":3,"sources":["helper/Helper.js","buttons/Buttons.js","todoitem/TodoItem.js","todoTable/TodoTable.js","todolist/TodoList.js","App.js","index.js"],"names":["fetching","url","fetch","then","response","json","Buttons","_ref","onSort","react_default","a","createElement","className","type","onClick","TodoItem","title","name","todoProcess","TodoTable","sortMethod","table","sortedList","Object","toConsumableArray","sort","b","completed","user","localeCompare","Fragment","map","item","todoitem_TodoItem","key","id","TodoList","buttons_Buttons","todoTable_TodoTable","App","state","loading","tableList","loadTableList","_callee","regenerator_default","wrap","_context","prev","next","_this","setState","Promise","all","_ref2","_ref3","slicedToArray","todoList","userList","todo","_objectSpread","find","userId","stop","_this$state","this","todolist_TodoList","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.6e10137b.chunk.js","sourcesContent":["function loadUsers() {\n  return fetching('https://jsonplaceholder.typicode.com/users');\n}\n\nfunction loadTodos() {\n  return fetching('https://jsonplaceholder.typicode.com/todos');\n}\n\nfunction fetching(url) {\n  return fetch(url)\n    .then(response => response.json());\n}\n\nexport { loadTodos, loadUsers };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Buttons.css';\n\nfunction Buttons({ onSort }) {\n  return (\n    <div className=\"buttons\">\n      <button\n        type=\"button\"\n        className=\"ui primary basic button\"\n        onClick={() => onSort('Title')}\n      >\n        Sort by Title\n      </button>\n      <button\n        type=\"button\"\n        className=\"ui secondary basic button\"\n        onClick={() => onSort('User')}\n      >\n        Sort by User\n      </button>\n      <button\n        type=\"button\"\n        className=\"ui positive basic button\"\n        onClick={() => onSort('Status')}\n      >\n        Sort by Status\n      </button>\n      <button\n        type=\"button\"\n        className=\"ui negative basic button\"\n        onClick={() => onSort('Reset')}\n      >\n        Reset\n      </button>\n    </div>\n  );\n}\n\nButtons.propTypes = {\n  onSort: PropTypes.func.isRequired,\n};\n\nexport default Buttons;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction TodoItem({ title, name, todoProcess }) {\n  return (\n    <tr>\n      <td>{title}</td>\n      <td>{name}</td>\n      <td className={todoProcess ? 'positive' : 'warning'}>\n        {todoProcess ? 'Виконано' : 'Забито'}\n      </td>\n    </tr>\n  );\n}\n\nTodoItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  todoProcess: PropTypes.bool.isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from '../todoitem/TodoItem';\n\nfunction TodoTable({ sortMethod, table }) {\n  let sortedList = [];\n\n  switch (sortMethod) {\n    case 'Status':\n      sortedList = [...table]\n        .sort((a, b) => b.completed - a.completed);\n      break;\n    case 'User':\n      sortedList = [...table]\n        .sort((a, b) => a.user.name.localeCompare(b.user.name));\n      break;\n    case 'Title':\n      sortedList = [...table]\n        .sort((a, b) => a.title.localeCompare(b.title));\n      break;\n    case 'Reset':\n      sortedList = [...table];\n      break;\n    default:\n      sortedList = [...table];\n  }\n\n  return (\n    <>\n      <table className=\"ui celled table\">\n        <thead>\n          <tr>\n            <th>Завдання</th>\n            <th>Відповідальний</th>\n            <th>Процес</th>\n          </tr>\n        </thead>\n        <tbody>\n          {sortedList.map(item => (\n            <TodoItem\n              key={item.id}\n              title={item.title}\n              todoProcess={item.completed}\n              name={item.user.name}\n            />\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n}\n\nTodoTable.propTypes = {\n  sortMethod: PropTypes.string.isRequired,\n  table: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default TodoTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Buttons from '../buttons/Buttons';\nimport TodoTable from '../todoTable/TodoTable';\n\nfunction TodoList({ onSort, table, sortMethod }) {\n  return (\n    <>\n      <Buttons onSort={onSort} />\n      <TodoTable table={table} sortMethod={sortMethod} />\n    </>\n  );\n}\n\nTodoList.propTypes = {\n  onSort: PropTypes.func.isRequired,\n  table: PropTypes.arrayOf(PropTypes.object).isRequired,\n  sortMethod: PropTypes.string.isRequired,\n};\n\nexport default TodoList;\n","import React, { Component } from 'react';\nimport { loadTodos, loadUsers } from './helper/Helper';\nimport TodoList from './todolist/TodoList';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    loading: false,\n    tableList: null,\n    sortMethod: 'Reset',\n  }\n\n  loadTableList = async() => {\n    this.setState({\n      loading: true,\n    });\n\n    Promise.all([loadTodos(), loadUsers()])\n      .then(([todoList, userList]) => {\n        const tableList = todoList.map(todo => ({\n          ...todo,\n          user: userList.find(item => item.id === todo.userId),\n        }));\n        this.setState({ tableList });\n      });\n  }\n\n  onSort = (sortMethod) => {\n    this.setState({\n      sortMethod,\n    });\n  }\n\n  render() {\n    const { loading, tableList, sortMethod } = this.state;\n    if (tableList === null) {\n      if (loading) {\n        return `Loading...`;\n      }\n      return (\n        <button\n          type=\"button\"\n          className=\"ui labeled icon button\"\n          onClick={this.loadTableList}\n        >\n          <i className=\"right arrow icon\" />\n          Load User\n        </button>\n      );\n    } return (\n      <TodoList\n        table={this.state.tableList}\n        onSort={this.onSort}\n        sortMethod={sortMethod}\n      />\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}